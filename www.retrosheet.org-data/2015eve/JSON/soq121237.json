{"tags":["xml", "xquery", "marklogic"], "originalId":"121237", "comments":[{"text":"Does the string contain some escaped XML that you want to parse into a node, or do you just want to turn the string into a text node so that you can pass it to this particular function?", "creationDate":"2008-09-26T08:45:19.493Z", "owner":{"userName":"souser6739@example.com", "displayName":"JeniT", "originalId":"6739", "id":"sou6739"}, "id":"soc36296"}], "owner":{"userName":"souser1681@example.com", "displayName":"Sixty4Bit", "originalId":"1681", "id":"sou1681"}, "lastActivityDate":"2013-10-09T06:15:14.317Z", "id":"soq121237", "answerCount":4, "answers":[{"text":"If you are talking about strings that contain XML markup, there are standardized solutions (from XPath/XQuery Functions 3.0) as well:\n* string to node: [fn:parse-xml()](http://www.w3.org/TR/xpath-functions-30/#func-parse-xml)\n* node to string: [fn:serialize()](http://www.w3.org/TR/xpath-functions-30/#func-serialize)", "upvotingContributorIds":["unknown", "unknown", "unknown", "unknown", "unknown"], "creationDate":"2012-08-02T19:36:40.223Z", "itemTally":5, "downvotingContributorIds":[], "comments":[], "owner":{"userName":"souser214446@example.com", "displayName":"mb21", "originalId":"214446", "id":"sou214446"}, "id":"soa11784584"}, {"text":"If you want to create a **text** node out of the string, just use a **text** node constructor:\n\n\ttext { \"your string goes here\" }\n\t\n\nor if you prefer to create an **element** with the string content, you can construct an **element** something like this:\n\n\telement (some-element) { \"your string goes here\" }\n\t", "upvotingContributorIds":["unknown", "unknown", "unknown", "unknown", "unknown", "unknown"], "creationDate":"2008-11-09T21:47:17.230Z", "itemTally":6, "downvotingContributorIds":[], "comments":[], "id":"soa276520"}, {"text":"**MarkLogic solutions:**\n\nThe best way to convert a string into a node is to use:\n\n\txdmp:unquote($string).\n\t\n\nConversely if you want to convert a node into a string you would use: \n\n\txdmp:quote($node).\n\t\n\n**Language agnostic solutions:**\n\nNode to string is:\n\n\tfn:string($node)\n\t", "upvotingContributorIds":["unknown", "unknown", "unknown", "unknown"], "creationDate":"2008-09-23T14:15:11.177Z", "itemTally":3, "downvotingContributorIds":["unknown"], "comments":[{"text":":) He *is* the poster", "creationDate":"2008-11-05T04:22:17.167Z", "owner":{"userName":"souser20164@example.com", "displayName":"Jim Burger", "originalId":"20164", "id":"sou20164"}, "id":"soc120491"}, {"text":"I hate to accept my own answer, but this is what I was looking for and solved the problem I was having. Does the question need to be restated?", "creationDate":"2009-03-11T22:30:35.847Z", "owner":{"userName":"souser1681@example.com", "displayName":"Sixty4Bit", "originalId":"1681", "id":"sou1681"}, "id":"soc449906"}, {"text":"Also, you're node to string code probably doesn't do what the poster wants - it will only return the concatenated string value of all nodes below $node, but not the actual XML syntax (<foo/>)", "creationDate":"2008-10-20T12:32:14.823Z", "owner":{"userName":"souser22227@example.com", "displayName":"Martin Probst", "originalId":"22227", "id":"sou22227"}, "id":"soc87677"}, {"text":"xdmp:unquote and quote aren't part of the XQuery language spec, it is part of a set of MarkLogic extension libraries. Loading xml from string literals into a node depends on the XQuery engine being used. http://www.xml.com/lpt/a/1660", "creationDate":"2008-09-23T14:25:29.077Z", "owner":{"userName":"souser20164@example.com", "displayName":"Jim Burger", "originalId":"20164", "id":"sou20164"}, "id":"soc26869"}, {"text":"It's a reasonable way to ask.  You might also have asked how to parse (or de-serialize) a string into XML.", "creationDate":"2012-03-06T22:50:55.807Z", "owner":{"userName":"souser288959@example.com", "displayName":"Eric Bloch", "originalId":"288959", "id":"sou288959"}, "id":"soc12167521"}], "owner":{"userName":"souser1681@example.com", "displayName":"Sixty4Bit", "originalId":"1681", "id":"sou1681"}, "id":"soa121249"}, {"text":"The answer to this question depends on what engine is being used. For instance, users of **Saxon**, use the `saxon:parse` method.\n\nThe fact is the **XQuery** spec doesn't have a built in for this. \n\nGenerally speaking you would only really need to use this if you needed to pull some embedded **XML** from a **CDATA** section. Otherwise you can read files in from the filesystem, or declare **XML** directly inline.\n\nFor the most you would use the declarative form, instead of a hardcoded string e.g. (using Stylus studio)\n\n\tdeclare namespace my = \"http://tempuri.org\";\n\t\n\tdeclare function my:foo($bar as node()*) as node() {\n\t    <unimportant></unimportant>\n\t} ;\n\t\n\tlet $bar := <node><child></child></node>\n\t\n\treturn my:foo(bar)\n\t", "upvotingContributorIds":["unknown", "unknown"], "creationDate":"2008-09-23T14:43:50.937Z", "itemTally":2, "downvotingContributorIds":[], "comments":[], "owner":{"userName":"souser20164@example.com", "displayName":"Jim Burger", "originalId":"20164", "id":"sou20164"}, "id":"soa121467"}], "voteCount":16, "accepted":true, "downvotingContributorIds":[], "text":"I would like to convert a string into a node. I have a method that is defined to take a node, but the value I have is a string (it is hard coded). How do I turn that string into a node?\n\nSo, given an XQuery method:\n\n\tdefine function foo($bar as node()*) as node() {\n\t  (: unimportant details :)\n\t}\n\t\n\nI have a string that I want to pass to the foo method. How do I convert the string to a node so that the method will accept the string.", "creationDate":"2008-09-23T14:12:22.603Z", "itemTally":0, "upvotingContributorIds":[], "title":"How do you convert a string to a node in XQuery?", "acceptedAnswerId":"soa121249"}